{"version":3,"sources":["Images.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["Images","image","this","props","className","src","large","alt","React","Component","Search","state","keyword","photos","loader","inputHandle","e","setState","target","value","searchImages","a","preventDefault","axios","get","headers","Authorization","res","data","console","log","onSubmit","type","name","onChange","placeholder","map","img","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEMA,E,4JACL,WACC,IAAOC,EAASC,KAAKC,MAAdF,MACP,OACE,qBAAKG,UAAU,2BAAf,SACC,qBAAKC,IAAKJ,EAAMI,IAAIC,MAAOC,IAAI,YAAYH,UAAU,oB,GALrCI,IAAMC,WAWZT,ICRTU,E,4MACLC,MAAO,CACNC,QAAQ,GACRC,OAAO,GACPC,QAAO,G,EAERC,YAAY,SAACC,GACT,EAAKC,SAAS,CAACL,QAAQI,EAAEE,OAAOC,S,EAEpCC,a,uCAAc,WAAOJ,GAAP,eAAAK,EAAA,6DACbL,EAAEM,iBACF,EAAKL,SAAS,CAACH,QAAO,IAFT,SAGKS,IAAMC,IAAN,iDAAoD,EAAKb,MAAMC,QAA/D,uBAClB,CACCa,QAAQ,CACPC,cAAc,8DANH,OAGPC,EAHO,OASb,EAAKV,SAAS,CAACH,QAAO,IACtB,EAAKG,SAAS,CAACJ,OAAOc,EAAIC,KAAKf,SAC/BgB,QAAQC,IAAI,EAAKnB,MAAME,QAXV,2C,kGAed,WACC,OACC,qCACC,uBAAMT,UAAU,OAAO2B,SAAU7B,KAAKkB,aAAtC,UACC,qBAAKhB,UAAU,kBAAf,SACC,uBAAO4B,KAAK,OACXC,KAAK,UACL7B,UAAU,eACVe,MAAOjB,KAAKS,MAAMC,QAClBsB,SAAUhC,KAAKa,YACfoB,YAAY,uBAGd,qBAAK/B,UAAU,aAAf,SACC,uBAAO4B,KAAK,SACXb,MAAM,gBACNf,UAAU,mCAGb,qBAAKA,UAAU,MAAf,SACEF,KAAKS,MAAMG,OAGP,4CAFLZ,KAAKS,MAAME,OAAOuB,KAAI,SAAAC,GAAG,OACxB,cAAC,EAAD,CAAQpC,MAAOoC,GAAUA,EAAIC,gB,GA9Cd9B,IAAMC,WAuDZC,IChDA6B,MARf,WACE,OACE,qBAAKnC,UAAU,YAAf,SACC,cAAC,EAAD,OCKUoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2c36a590.chunk.js","sourcesContent":["import React from 'react';\n\nclass Images extends React.Component{\n\trender(){\n\t\tconst {image} = this.props;\n\t\treturn(\n\t\t\t\t<div className=\"col-md-3 mb-3 mt-3 h-100\">\n\t\t\t\t\t<img src={image.src.large} alt=\"Not Found\" className=\"img-fluid\"/>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Images","import React from 'react';\nimport axios from 'axios';\nimport Images from './Images';\n\n\nclass Search extends React.Component{\n\tstate ={\n\t\tkeyword:'',\n\t\tphotos:[],\n\t\tloader:false\n\t}\n\tinputHandle=(e)=>{\n\t   \tthis.setState({keyword:e.target.value});\n\t}\n\tsearchImages =async (e)=>{\n\t\te.preventDefault();\n\t\tthis.setState({loader:true});\n\t\tconst res = await axios.get(`https://api.pexels.com/v1/search?query=${this.state.keyword}&per_page=15&page=1`,\n\t\t{\n\t\t\theaders:{\n\t\t\t\tAuthorization:'563492ad6f917000010000012f54859dd989452a984a8763016a5f06',\n\t\t\t},\n\t\t});\n\t\tthis.setState({loader:false});\n\t\tthis.setState({photos:res.data.photos});\n\t\tconsole.log(this.state.photos);\n\t}\n\n\n\trender(){\n\t\treturn(\n\t\t\t<>\n\t\t\t <form className=\"mt-4\" onSubmit={this.searchImages}>\n\t\t\t \t<div className=\"form-group mb-4\">\n\t\t\t \t\t<input type=\"text\" \n\t\t\t \t\t name=\"keyword\" \n\t\t\t \t\t className=\"form-control\" \n\t\t\t \t\t value={this.state.keyword}\n\t\t\t \t\t onChange={this.inputHandle}\n\t\t\t \t\t placeholder=\"Search images...\"\n\t\t\t \t\t />\n\t\t\t \t</div>\n\t\t\t \t<div className=\"form-group\">\n\t\t\t \t\t<input type=\"submit\" \n\t\t\t \t\t value=\"Search images\" \n\t\t\t \t\t className=\"btn btn-primary btn-block\"/>\n\t\t\t \t</div>\n\t\t\t </form>\n\t\t\t <div className=\"row\">\n\t\t\t {!this.state.loader?(\n\t\t\t \tthis.state.photos.map(img=>(\n\t\t\t \t\t<Images image={img} key={img.id}/>\n\t\t\t \t\t))):<h1>Loading...</h1>}\n\t\t\t </div>\n\t\t\t</>\n\t\t)\n\t}\n\n}\n\nexport default Search","import './App.css';\nimport 'bootswatch/dist/materia/bootstrap.min.css'; \nimport Search from \"./Search\"\n\nfunction App() {\n  return (\n    <div className=\"container\">\n     <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}